name: AIO App CI/CD Test

on:
  push:
    branches:
      - stage
jobs:
  deploy:
    name: Deploy to Stage
    environment: stage
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 1
      matrix:
        node-version: ['22']
        os: [ubuntu-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Debug - Node Info
        run: |
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
      - name: npm install
        run: npm i
      - name: Setup CLI
        uses: adobe/aio-cli-setup-action@1.3.0
        with:
          os: ${{ matrix.os }}
          version: 10.x.x
      - name: Debug - Check Required Secrets
        run: |
          echo "Checking all required secrets are present:"
          echo "CLIENTID_STAGE: ${{ secrets.CLIENTID_STAGE != '' && 'Present' || 'MISSING' }}"
          echo "CLIENTSECRET_STAGE: ${{ secrets.CLIENTSECRET_STAGE != '' && 'Present' || 'MISSING' }}"
          echo "TECHNICALACCID_STAGE: ${{ secrets.TECHNICALACCID_STAGE != '' && 'Present' || 'MISSING' }}"
          echo "TECHNICALACCEMAIL_STAGE: ${{ secrets.TECHNICALACCEMAIL_STAGE != '' && 'Present' || 'MISSING' }}"
          echo "IMSORGID_STAGE: ${{ secrets.IMSORGID_STAGE != '' && 'Present' || 'MISSING' }}"
          echo "SCOPES_STAGE: ${{ secrets.SCOPES_STAGE != '' && 'Present' || 'MISSING' }}"
          
          # Check for common format issues
          echo "Checking parameter formats:"
          CLIENTID="${{ secrets.CLIENTID_STAGE }}"
          IMSORGID="${{ secrets.IMSORGID_STAGE }}"
          TECHACCID="${{ secrets.TECHNICALACCID_STAGE }}"
          
          echo "CLIENTID length: $(echo -n "$CLIENTID" | wc -c)"
          echo "IMSORGID length: $(echo -n "$IMSORGID" | wc -c)"
          echo "TECHNICALACCID length: $(echo -n "$TECHACCID" | wc -c)"
          
          # Check for invalid characters or formatting
          if echo "$CLIENTID" | grep -q '@'; then
            echo "⚠️  CLIENTID contains @ (should not)"
          fi
          if echo "$IMSORGID" | grep -q '@'; then
            echo "⚠️  IMSORGID contains @ (should not)" 
          fi
      - name: Auth
        uses: adobe/aio-apps-action@3.3.0
        with:
          os: ${{ matrix.os }}
          command: oauth_sts
          CLIENTID: ${{ secrets.CLIENTID_STAGE }}
          CLIENTSECRET: ${{ secrets.CLIENTSECRET_STAGE }}
          TECHNICALACCOUNTID: ${{ secrets.TECHNICALACCID_STAGE }}
          TECHNICALACCOUNTEMAIL: ${{ secrets.TECHNICALACCEMAIL_STAGE }}
          IMSORGID: ${{ secrets.IMSORGID_STAGE }}
          SCOPES: "AdobeID,openid"
      # - name: Build
      #   env:
      #     AIO_RUNTIME_NAMESPACE: ${{ secrets.AIO_RUNTIME_NAMESPACE_STAGE }}
      #   uses: adobe/aio-apps-action@3.3.0
      #   with:
      #     os: ${{ matrix.os }}
      #     command: build
      # - name: Deploy
      #   env:
      #     AIO_RUNTIME_NAMESPACE: ${{ secrets.AIO_RUNTIME_NAMESPACE_STAGE }}
      #     AIO_RUNTIME_AUTH: ${{ secrets.AIO_RUNTIME_AUTH_STAGE }}
          # AIO_PROJECT_ID: ${{ secrets.AIO_PROJECT_ID_STAGE }}
          # AIO_PROJECT_NAME: ${{ secrets.AIO_PROJECT_NAME_STAGE }}
          # AIO_PROJECT_ORG_ID: ${{ secrets.AIO_PROJECT_ORG_ID_STAGE }}
          # AIO_PROJECT_WORKSPACE_ID: ${{ secrets.AIO_PROJECT_WORKSPACE_ID_STAGE }}
          # AIO_PROJECT_WORKSPACE_NAME: ${{ secrets.AIO_PROJECT_WORKSPACE_NAME_STAGE }}
          # AIO_PROJECT_WORKSPACE_DETAILS_SERVICES: ${{ secrets.AIO_PROJECT_WORKSPACE_DETAILS_SERVICES_STAGE }}
        # uses: adobe/aio-apps-action@3.3.0
        # with:
        #   os: ${{ matrix.os }}
        #   command: deploy
        #   noPublish: true