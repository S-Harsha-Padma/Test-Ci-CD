name: Run Scripts and Deploy

on:
  push:
    branches:
      - stage
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'stage'
        type: choice
        options:
          - stage
          - prod

jobs:
  run-scripts:
    name: Run Configuration Scripts
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['22']
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-scripts-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-scripts-
            ${{ runner.os }}-${{ env.cache-name }}-
      
      - name: Install Dependencies
        if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        run: |
          npm ci --prefer-offline
          npm list --depth=0
      
      - name: Run Scripts
        run: |
          npm run create-shipping-carriers
          npm run create-payment-methods

  deploy:
    name: Trigger Deployment
    needs: run-scripts
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    permissions:
      actions: write
      contents: read
    steps:
      - name: Trigger Stage Deployment
        if: ${{ inputs.environment == 'stage' }}
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'deploy-stage.yml',
              ref: 'stage'
            });
            console.log('Triggered stage deployment workflow');

      - name: Trigger Production Deployment
        if: ${{ inputs.environment == 'prod' }}
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'deploy-prod.yml',
              ref: 'prod'
            });
            console.log('Triggered production deployment workflow');

  ask-for-deployment:
    name: Request Deployment Environment
    needs: run-scripts
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Manual Deployment Required
        run: |
          echo "Scripts completed successfully!"
          echo "To deploy, manually trigger this workflow with:"
          echo "- Go to Actions tab"
          echo "- Select 'Run Scripts and Deploy' workflow"
          echo "- Click 'Run workflow'"
          echo "- Choose environment: stage or prod"
          echo "- Click 'Run workflow' button"
